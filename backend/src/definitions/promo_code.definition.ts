import { ApiTags, createRoute } from "../lib/route-wrapper";
import {
  PromoCodesListResponseSchema,
  PromoCodePathParamsSchema,
  PromoCodeQueryParamsSchema,
  PromoCodeResponseSchema,
  CreatePromoCodeRequestSchema,
  UpdatePromoCodeRequestSchema,
} from "../schemas";

export const PromoCodeRouteDefinitions = {
  getPromoCodes: createRoute({
    method: "get",
    path: "/promo-codes",
    summary: "Get promo codes",
    description: "Retrieve promo codes with filters and pagination",
    tags: [ApiTags.PROMOTIONS],
    successSchema: PromoCodesListResponseSchema,
    successDescription: "Promo codes retrieved successfully",
    querySchema: PromoCodeQueryParamsSchema,
    includeBadRequest: true,
  }),
  getPromoCodeById: createRoute({
    method: "get",
    path: "/promo-codes/{id}",
    summary: "Get promo code by ID",
    description: "Retrieve a promo code by ID",
    tags: [ApiTags.PROMOTIONS],
    successSchema: PromoCodeResponseSchema,
    successDescription: "Promo code retrieved successfully",
    paramsSchema: PromoCodePathParamsSchema,
    includeNotFound: true,
  }),
  createPromoCode: createRoute({
    method: "post",
    path: "/promo-codes",
    summary: "Create promo code",
    description: "Create a new promo code (amounts in paise)",
    tags: [ApiTags.PROMOTIONS],
    successSchema: PromoCodeResponseSchema,
    successDescription: "Promo code created successfully",
    requestSchema: CreatePromoCodeRequestSchema,
    includeBadRequest: true,
  }),
  updatePromoCode: createRoute({
    method: "put",
    path: "/promo-codes/{id}",
    summary: "Update promo code",
    description: "Update an existing promo code",
    tags: [ApiTags.PROMOTIONS],
    successSchema: PromoCodeResponseSchema,
    successDescription: "Promo code updated successfully",
    paramsSchema: PromoCodePathParamsSchema,
    requestSchema: UpdatePromoCodeRequestSchema,
    includeBadRequest: true,
    includeNotFound: true,
  }),
  deletePromoCode: createRoute({
    method: "delete",
    path: "/promo-codes/{id}",
    summary: "Delete promo code",
    description: "Delete a promo code",
    tags: [ApiTags.PROMOTIONS],
    successSchema: PromoCodeResponseSchema,
    successDescription: "Promo code deleted successfully",
    paramsSchema: PromoCodePathParamsSchema,
    includeNotFound: true,
  }),
};
