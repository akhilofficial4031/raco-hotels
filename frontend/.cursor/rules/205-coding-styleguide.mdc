---
description: 
globs: *.tsx
alwaysApply: false
---
## Code Style
- Use tabs for indentation
- Use single quotes for strings (except to avoid escaping)
- Omit semicolons (unless required for disambiguation)
- Eliminate unused variables
- Add space after keywords
- Add space before function declaration parentheses
- Always use strict equality (===) instead of loose equality (==)
- Space infix operators
- Add space after commas
- Keep else statements on the same line as closing curly braces
- Use curly braces for multi-line if statements
- Always handle error parameters in callbacks
- Limit line length to 80 characters
- Use trailing commas in multiline object/array literals

## Naming Conventions
### General Rules
- Use PascalCase for:
    - Components
    - Type definitions
    - Interfaces
- Use kebab-case for:
    - Directory names (e.g., components/auth-wizard)
    - File names (e.g., user-profile.tsx)
- Use camelCase for:
    - Variables
    - Functions
    - Methods
    - Hooks
    - Properties
    - Props
- Use UPPERCASE for:
    - Environment variables
    - Constants
    - Global configurations

### Specific Naming Patterns
- Prefix event handlers with 'handle': handleClick, handleSubmit
- Prefix boolean variables with verbs: isLoading, hasError, canSubmit
- Prefix custom hooks with 'use': useAuth, useForm
- Use complete words over abbreviations except for:
    - err (error)
    - req (request)
    - res (response)
    - props (properties)

    - ref (reference)